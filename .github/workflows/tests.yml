name: Pytest

on:
  push:
    branches:
      - "**"

jobs:
  run-tests:
    runs-on: ubuntu-latest

    strategy:
        matrix:
            python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install requirements
        run: pip install pytest pytest-cov

      - name: Run tests
        id: test
        run: pytest

      - name: Update Badge
        run: |
          version="${{ matrix.python-version }}"
          version_key="${version//./_}"
          if [[ "${{ steps.test.outcome }}" == "success" ]]; then
            echo "Generating PASS badge for Python $version"
            curl https://img.shields.io/badge/Python%20$version-Pass-brightgreen.svg > docs/badges/python$version_key.svg
          else:
            echo "Generating FAIL badge for Python $version"
            curl https://img.shields.io/badge/Python%203.9-Fail-red.svg > docs/badges/python$version_key.svg
        id: save-result

  publish-badges:
    runs-on: ubuntu-latest
    needs: run-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Commit and Push Badge Updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md ./docs/badges/*.svg
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update badges for all Python versions"
            git push
          fi